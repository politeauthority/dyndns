apiVersion: apps/v1
kind: Deployment
metadata:
  name: dyndns-daemon
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: dyndns-daemon
  template:
    metadata:
      labels:
        app.kubernetes.io/name: dyndns-daemon
    spec:
      containers:
      - name: dyndns
        image: harbor.squid-ink.us/politeauthority/dyndns:dev
        imagePullPolicy: IfNotPresent
        command: 
        - tail
        - -f 
        - /dev/null
        env:
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: dynsdns-config
              key: redis-host
        - name: REDIS_DB
          valueFrom:
            configMapKeyRef:
              name: dynsdns-config
              key: redis-db
        - name: REDIS_PASS
          value: "redis-password"
        - name: DOMAIN_FILE
          value: "/config/domains.json"
        - name: FORCE_UPDATE
          valueFrom:
            configMapKeyRef:
              name: dynsdns-config
              key: force-update
        - name: QUIGLEY_API_URL
          valueFrom:
            secretKeyRef:
              name: notification-creds
              key: QUIGLEY_API_URL
        - name: QUIGLEY_API_BASIC_AUTH
          valueFrom:
            secretKeyRef:
              name: notification-creds
              key: QUIGLEY_API_BASIC_AUTH
        volumeMounts:
        - name: domain-config
          mountPath: /config
      volumes:
        - name: domain-config
          secret:
            secretName: domain-config
      imagePullSecrets:
        - name: harbor-registry
